/**
 * \file 01_terminal_output.cpp
 * \brief Пример вывода в терминал
 * \details
 * Каждый цикл происходит вывод в терминал.
 *  
 * Количество аргументов, принимаемых функцией print_debug(), не ограничено.
 * Однако есть ограничение по размеру выводимой итоговой строки - 128 байт, при
 * этом последний байт отведен под символ конца строки. При превышении размера 
 * буфера лишние символы в терминале выводиться не будут.
 * 
 * Для перевода строки и возврата каретки использутеся последовательность
 * символов \r\n.
 * 
 * Внимание: частый вывод большого количества текста может привести к
 * переполнению буфера отладки и появлению соответствующей ошибки. Размер
 * буфера отладки по умолчанию 1 кБ.
 * 
 * 
 * Для запуска примера скопируйте код в src/pou1.cpp.
 * Настройки POU в функции PLC_MainSetup() в файле pou_manager.cpp:
 * AddPOU(POU1, 1000, 1000);  // Период вызова 1000 мс, сторожевой таймер 1 сек
 * 
 */

#include "pou_manager.h"

using namespace plc;

//! Дискретный вход DI1
DiscreteInput di1 (cpu_io, CPU_DINPUT1);

//! Переманная в целочисленном формате
int16_t myVar = 42;


void POU1()
{
  // Вывод статической строки
  print_debug("Hello!\r\n");
  // Вывод переменной типа int16_t
  print_debug("Значение myVar = %d\r\n", myVar);
  // Вывод значения входа DI1
  print_debug("DI1 = %d\r\n", di1.value());
}
